{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "JWT token in authorization bearer",
        "title": "Core backend app for Leaders of Digital Transformation",
        "contact": {
            "name": "Docs developer",
            "url": "https://t.me/KlenoviySirop",
            "email": "KlenoviySir@yandex.ru"
        },
        "version": "1.0.0"
    },
    "host": "gate.gb.ldt2023.infantem.tech",
    "paths": {
        "/account/info": {
            "get": {
                "description": "Endpoint to get information about user",
                "tags": [
                    "Account"
                ],
                "summary": "Get information about user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCommonInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            },
            "put": {
                "description": "Endpoint to get information about user",
                "tags": [
                    "Account"
                ],
                "summary": "Update user's information",
                "parameters": [
                    {
                        "description": "Updated information about user",
                        "name": "updated_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateUserInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCommonInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/account/results": {
            "get": {
                "description": "Endpoint to get all information by user (temp w/o pagination)",
                "tags": [
                    "Account"
                ],
                "summary": "Get all results for account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetResultsByUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth": {
            "post": {
                "description": "Accepts token from vendor which we process and returning pair of tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Sign in or sign up via external vendor",
                "parameters": [
                    {
                        "enum": [
                            "apple",
                            "google"
                        ],
                        "type": "string",
                        "description": "Vendor which is providing authorization",
                        "name": "vendor",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/check": {
            "get": {
                "description": "Validates that session is authorized",
                "tags": [
                    "Authorization"
                ],
                "summary": "Health and auth check",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/email/validate": {
            "post": {
                "description": "Validating user's email with take message on email and writing code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization"
                ],
                "summary": "Validating user's email",
                "parameters": [
                    {
                        "description": "Data for validation by email from app",
                        "name": "code",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.EmailValidateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.EmailValidateResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/password/reset": {
            "put": {
                "description": "Resetting password by getting validated email for password change",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization",
                    "Password"
                ],
                "summary": "Resetting password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session key to identify that this is current session of password change",
                        "name": "t-session-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New password pair with confirmation to update credentials",
                        "name": "new_pswds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ResetPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/password/reset/prepare": {
            "patch": {
                "description": "Creates session for password reset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization",
                    "Password"
                ],
                "summary": "Make reset password session",
                "parameters": [
                    {
                        "description": "Session key for backend's session validation",
                        "name": "new_pswds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PrepareResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PrepareResetPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/password/reset/validate": {
            "patch": {
                "description": "Validate reset password session by code that user gets on its email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization",
                    "Password"
                ],
                "summary": "Validate reset password session",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session key to identify that this is current session of password change",
                        "name": "t-session-key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Code from email to validate request",
                        "name": "new_pswds",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ValidateResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ValidateResetPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign/in": {
            "post": {
                "description": "Authorization and get access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization",
                    "Login"
                ],
                "summary": "Sign in",
                "parameters": [
                    {
                        "description": "Authorization data from user",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignInResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign/out": {
            "delete": {
                "description": "Delete tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization",
                    "Login"
                ],
                "summary": "Sign out",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignOutResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/auth/sign/up": {
            "post": {
                "description": "Sign up with data which was in our task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authorization",
                    "Login"
                ],
                "summary": "Sign up with base data",
                "parameters": [
                    {
                        "description": "Authorization data from user",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.SignUpResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/calc": {
            "post": {
                "description": "Calculations with authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Improved calculation w/ auth",
                "parameters": [
                    {
                        "description": "Basic parameters for base calculator w/o auth",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BaseCalculateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ImprovedCalculateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/calc/base": {
            "post": {
                "description": "Base calculation without authorization for landing page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calculator"
                ],
                "summary": "Base calculation",
                "parameters": [
                    {
                        "description": "Basic parameters for base calculator w/o auth",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.BaseCalculateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BaseCalculateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/calc/fields": {
            "get": {
                "description": "Get report by tracker id",
                "tags": [
                    "Calculator",
                    "UI"
                ],
                "summary": "Get constants for calculator's fields",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCalculatorConstantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/calc/report/:trackerId": {
            "get": {
                "description": "Get report by tracker id",
                "tags": [
                    "Calculator"
                ],
                "summary": "Get result by tracker id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BaseCalculateRequest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        },
        "/ui/calc/element/active": {
            "get": {
                "description": "Get specification for ui elements to visualise it on frontend",
                "tags": [
                    "UI"
                ],
                "summary": "Get UI elements for calculator",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetCalcActiveElementsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/common.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.Response": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                }
            }
        },
        "internal_account_model.BusinessDataLogic": {
            "type": "object",
            "properties": {
                "economic_activity": {
                    "type": "string"
                },
                "inn": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "internal_account_model.PersonalDataLogic": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "geography": {
                    "type": "string"
                },
                "job_position": {
                    "type": "string"
                }
            }
        },
        "internal_auth_model.BusinessDataLogic": {
            "type": "object",
            "required": [
                "inn"
            ],
            "properties": {
                "economic_activity": {
                    "type": "string",
                    "example": "Производство"
                },
                "inn": {
                    "type": "string",
                    "example": "7707083893"
                },
                "name": {
                    "type": "string",
                    "example": "ООО ИНФАНТЕМ"
                },
                "website": {
                    "type": "string",
                    "example": "infantem.tech"
                }
            }
        },
        "internal_auth_model.PersonalDataLogic": {
            "type": "object",
            "required": [
                "full_name"
            ],
            "properties": {
                "full_name": {
                    "type": "string",
                    "example": "Иванов Иван Иванович"
                },
                "geographic": {
                    "type": "object",
                    "properties": {
                        "city": {
                            "type": "string",
                            "example": "Москва"
                        },
                        "country": {
                            "type": "string",
                            "example": "Российская Федерация"
                        }
                    }
                },
                "position": {
                    "type": "string",
                    "example": "Старший менеджер по инвестициям"
                }
            }
        },
        "model.BaseCalculateRequest": {
            "type": "object",
            "properties": {
                "bookkeeping": {
                    "type": "boolean"
                },
                "building_area": {
                    "type": "integer"
                },
                "county": {
                    "type": "string"
                },
                "industry": {
                    "type": "string"
                },
                "land_area": {
                    "type": "integer"
                },
                "machine_names": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "machine_quantities": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "operations": {
                    "type": "integer"
                },
                "organization_type": {
                    "type": "string"
                },
                "other_needs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "patent_type": {
                    "type": "string"
                },
                "project_name": {
                    "type": "string"
                },
                "tax_system": {
                    "type": "string"
                },
                "workers_quantity": {
                    "type": "integer"
                }
            }
        },
        "model.BaseCalculateResponse": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "object",
                    "properties": {
                        "bookkeeping": {
                            "type": "boolean"
                        },
                        "building_area": {
                            "type": "integer"
                        },
                        "county": {
                            "type": "string"
                        },
                        "industry": {
                            "type": "string"
                        },
                        "land_area": {
                            "type": "integer"
                        },
                        "machine_names": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "machine_quantities": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "operations": {
                            "type": "integer"
                        },
                        "organization_type": {
                            "type": "string"
                        },
                        "other_needs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "patent_type": {
                            "type": "string"
                        },
                        "project_name": {
                            "type": "string"
                        },
                        "tax_system": {
                            "type": "string"
                        },
                        "workers_quantity": {
                            "type": "integer"
                        }
                    }
                },
                "output": {
                    "type": "object",
                    "properties": {
                        "estate": {
                            "type": "object",
                            "properties": {
                                "building_expenses": {
                                    "type": "integer"
                                },
                                "estate_expenses": {
                                    "type": "integer"
                                },
                                "land_expenses": {
                                    "type": "integer"
                                }
                            }
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "bookkeeping_expenses": {
                                    "type": "integer"
                                },
                                "duty_expenses": {
                                    "type": "integer"
                                },
                                "machine_expenses": {
                                    "type": "integer"
                                },
                                "patent_expenses": {
                                    "type": "integer"
                                },
                                "service_expenses": {
                                    "type": "integer"
                                }
                            }
                        },
                        "staff": {
                            "type": "object",
                            "properties": {
                                "medical_expenses": {
                                    "type": "integer"
                                },
                                "pension_expenses": {
                                    "type": "integer"
                                },
                                "salaries_expenses": {
                                    "type": "integer"
                                },
                                "staff_expenses": {
                                    "type": "integer"
                                }
                            }
                        },
                        "tax": {
                            "type": "object",
                            "properties": {
                                "estate_tax": {
                                    "type": "integer"
                                },
                                "income_tax": {
                                    "type": "integer"
                                },
                                "land_tax": {
                                    "type": "integer"
                                },
                                "tax_expenses": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "total_expenses": {
                    "type": "integer"
                },
                "tracker_id": {
                    "type": "string"
                }
            }
        },
        "model.EmailValidateRequest": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                }
            }
        },
        "model.EmailValidateResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "model.GetCalcActiveElementsResponse": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UiCategoryLogic"
                    }
                }
            }
        },
        "model.GetCalculatorConstantResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "industries": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "machines": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "needs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "patents": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "model.GetCommonInfoResponse": {
            "type": "object",
            "properties": {
                "business_data": {
                    "$ref": "#/definitions/internal_account_model.BusinessDataLogic"
                },
                "personal_data": {
                    "$ref": "#/definitions/internal_account_model.PersonalDataLogic"
                }
            }
        },
        "model.GetResultsByUserResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "report_id": {
                                "type": "string"
                            },
                            "summary": {
                                "type": "integer"
                            },
                            "time_stamp": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "model.ImprovedCalculateResponse": {
            "type": "object",
            "properties": {
                "input": {
                    "type": "object",
                    "properties": {
                        "bookkeeping": {
                            "type": "boolean"
                        },
                        "building_area": {
                            "type": "integer"
                        },
                        "county": {
                            "type": "string"
                        },
                        "industry": {
                            "type": "string"
                        },
                        "land_area": {
                            "type": "integer"
                        },
                        "machine_names": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "machine_quantities": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "operations": {
                            "type": "integer"
                        },
                        "organization_type": {
                            "type": "string"
                        },
                        "other_needs": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "patent_type": {
                            "type": "string"
                        },
                        "project_name": {
                            "type": "string"
                        },
                        "tax_system": {
                            "type": "string"
                        },
                        "workers_quantity": {
                            "type": "integer"
                        }
                    }
                },
                "link": {
                    "type": "string"
                },
                "output": {
                    "type": "object",
                    "properties": {
                        "estate": {
                            "type": "object",
                            "properties": {
                                "building_expenses": {
                                    "type": "integer"
                                },
                                "estate_expenses": {
                                    "type": "integer"
                                },
                                "land_expenses": {
                                    "type": "integer"
                                }
                            }
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "bookkeeping_expenses": {
                                    "type": "integer"
                                },
                                "duty_expenses": {
                                    "type": "integer"
                                },
                                "machine_expenses": {
                                    "type": "integer"
                                },
                                "patent_expenses": {
                                    "type": "integer"
                                },
                                "service_expenses": {
                                    "type": "integer"
                                }
                            }
                        },
                        "staff": {
                            "type": "object",
                            "properties": {
                                "medical_expenses": {
                                    "type": "integer"
                                },
                                "pension_expenses": {
                                    "type": "integer"
                                },
                                "salaries_expenses": {
                                    "type": "integer"
                                },
                                "staff_expenses": {
                                    "type": "integer"
                                }
                            }
                        },
                        "tax": {
                            "type": "object",
                            "properties": {
                                "estate_tax": {
                                    "type": "integer"
                                },
                                "income_tax": {
                                    "type": "integer"
                                },
                                "land_tax": {
                                    "type": "integer"
                                },
                                "tax_expenses": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                },
                "total_expenses": {
                    "type": "integer"
                },
                "tracker_id": {
                    "type": "string"
                }
            }
        },
        "model.PrepareResetPasswordRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "model.PrepareResetPasswordResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                },
                "session_key": {
                    "type": "string"
                }
            }
        },
        "model.RegistrationDataLogic": {
            "type": "object",
            "required": [
                "email",
                "password",
                "repeated_password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@mail.ru"
                },
                "password": {
                    "type": "string",
                    "example": "1234qwerty!"
                },
                "repeated_password": {
                    "type": "string",
                    "example": "1234qwerty!"
                }
            }
        },
        "model.ResetPasswordRequest": {
            "type": "object",
            "required": [
                "password",
                "repeated_password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "repeated_password": {
                    "type": "string"
                }
            }
        },
        "model.ResetPasswordResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                }
            }
        },
        "model.SignInRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.SignInResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                }
            }
        },
        "model.SignOutResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                }
            }
        },
        "model.SignUpRequest": {
            "type": "object",
            "properties": {
                "auth_data": {
                    "$ref": "#/definitions/model.RegistrationDataLogic"
                },
                "business_data": {
                    "$ref": "#/definitions/internal_auth_model.BusinessDataLogic"
                },
                "personal_data": {
                    "$ref": "#/definitions/internal_auth_model.PersonalDataLogic"
                }
            }
        },
        "model.SignUpResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                }
            }
        },
        "model.UiCategoryLogic": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "elements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UiElementLogic"
                    }
                }
            }
        },
        "model.UiElementLogic": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                },
                "field_id": {
                    "type": "string"
                },
                "options": {
                    "type": "array",
                    "items": {}
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.UpdateUserInfoRequest": {
            "type": "object",
            "properties": {
                "business_data": {
                    "$ref": "#/definitions/internal_account_model.BusinessDataLogic"
                },
                "personal_data": {
                    "$ref": "#/definitions/internal_account_model.PersonalDataLogic"
                }
            }
        },
        "model.ValidateResetPasswordRequest": {
            "type": "object",
            "required": [
                "validation_code"
            ],
            "properties": {
                "validation_code": {
                    "type": "string"
                }
            }
        },
        "model.ValidateResetPasswordResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "internal_code": {
                    "type": "integer"
                }
            }
        }
    }
}